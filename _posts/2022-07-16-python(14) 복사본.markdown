---
layout: post
title: 파이썬 분수찾기(백준 BOJ 1193)
date: 2022-07-16 17:00:00 +0900
image: 백준.png
tags: 문법
categories: python
---

<br>

## 문제

무한히 큰 배열에 다음과 같이 분수들이 적혀있다.

| 1/1  | 1/2  | 1/3  | 1/4  | 1/5  | …    |
| ---- | ---- | ---- | ---- | ---- | ---- |
| 2/1  | 2/2  | 2/3  | 2/4  | …    | …    |
| 3/1  | 3/2  | 3/3  | …    | …    | …    |
| 4/1  | 4/2  | …    | …    | …    | …    |
| 5/1  | …    | …    | …    | …    | …    |
| …    | …    | …    | …    | …    | …    |

이와 같이 나열된 분수들을 1/1 → 1/2 → 2/1 → 3/1 → 2/2 → … 과 같은 지그재그 순서로 차례대로 1번, 2번, 3번, 4번, 5번, … 분수라고 하자.

X가 주어졌을 때, X번째 분수를 구하는 프로그램을 작성하시오.

<br>

## 입력

첫째 줄에 X(1 ≤ X ≤ 10,000,000)가 주어진다.

<br>

## 출력

첫째 줄에 분수를 출력한다.

<br>

## 예제 입력 1

```
1
```

## 예제 출력 1

```
1/1
```

## 예제 입력 2

```
2
```

## 예제 출력 2

```
1/2
```

## 예제 입력 3

```
3
```

## 예제 출력 3

```
2/1
```

## 예제 입력 4

```
4
```

## 예제 출력 4

```
3/1
```

## 예제 입력 5

```
5
```

## 예제 출력 5

```
2/2
```

## 예제 입력 6

```
6
```

## 예제 출력 6

```
1/3
```

## 예제 입력 7

```
7
```

## 예제 출력 7

```
1/4
```

## 예제 입력 8

```
8
```

## 예제 출력 8

```
2/3
```

## 예제 입력 9

```
9
```

## 예제 출력 9

```
3/2
```

## 예제 입력 10

```
14
```

## 예제 출력 10

```
2/4
```

<br>



## 📝 풀어보기

📌 일단 위의 표를 보면 `1 = 1/1, 2 = 1/2, 3 = 2/1`로 번호가 늘어남에 따라 아래와 같은 규칙성을 가지고있다.   ![python_image]({{site.baseurl}}/images/python2.png) 

여기서 `1/1`은 첫번째 라인, `1/2, 2/1` 은 두번째 라인, `3/1, 2/2 ,1/3`은 세번째 라인과 같이 같은 선 상에서 대각선으로 그어지는 범위를 `line` 으로 정하고 라인이 늘어남에 따라 1 부터 입력한 `n`까지의 블럭의 개수 합을 `t_sum` 으로 정한다.

``` python
n =int(input()) # ex) 8
line = 0 # 대각선으로 그었을때 라인 
t_sum = 0 # 라인 1부터 n까지의 블럭 개수의 합
```

<br>

``` python
while n > t_sum: # t_sum이 n보다 
    line += 1    # line 수 1씩 증가 1, 2, 3, (4)...
    t_sum += line # t_sum + 라인수의 누적 1, 3, 6, 
```

📌  `n`이  `t_sum`보다 작아질때까지 line은 1씩 증가하고, 블럭은 1, 3, 6... 씩 증가한다.

<br>

``` python
if line % 2 == 0:
    mo = n - (t_sum - line) # 8 - (10 - 4) = 2
    ja = (t_sum - n) + 1 # (10 - 8) + 1 = 3
    print(str(mo)+"/"+str(ja))
```

📌 line이 짝수인 경우에 분모의 값은 `입력값 - 블럭의 합 - 라인의 수`가 된다. 예를 들어 입력값이 8인 경우에 8 - 10 - 4 = 2가 된다.

분자의 값은 `블럭의 합 - 입력값 + 1`으로, 10 - 8 + 1 = 3이 된다. 

<br>

📌 line이 홀수인 경우에는 짝수의 분자와 분모의 값만 바꿔주면 된다.

``` python
elif line % 2 == 1:# n : 4 line : 3 t_sum : 6
    mo = (t_sum - n) + 1 
    ja = n - (t_sum - line) 
    print(str(mo)+"/"+str(ja))
```

<br>

#### 전체 코드

``` python
n =int(input()) # ex) 8
line = 0 # 대각선으로 그었을때 라인 
t_sum = 0 # 라인 1부터 n까지의 블럭 개수의 합

while n > t_sum: # t_sum이 n보다 작은 동안
    line += 1    # line 수 1씩 증가 1, 2, 3, (4)...
    t_sum += line # t_sum + 라인수의 누적 1, 3, 6, (10)...
# 8 = 2/3
if line % 2 == 0:
    mo = n - (t_sum - line) # 8 - (10 - 4) = 2
    ja = (t_sum - n) + 1 # (10 - 8) + 1 = 3
    print(str(mo)+"/"+str(ja))
elif line % 2 == 1:# n : 4 line : 3 t_sum : 6
    mo = (t_sum - n) + 1 
    ja = n - (t_sum - line) 
    print(str(mo)+"/"+str(ja))
```

