---
layout: post
title: 파이썬 최소공배수(백준 BOJ 1934)
date: 2022-08-28 12:00:00 +0900
image: 백준.png
tags: 알고리즘
categories: 문제풀이
---

<br>

유클리드 호제법 활용하기

## 문제

두 자연수 A와 B에 대해서, A의 배수이면서 B의 배수인 자연수를 A와 B의 공배수라고 한다. 이런 공배수 중에서 가장 작은 수를 최소공배수라고 한다. 예를 들어, 6과 15의 공배수는 30, 60, 90등이 있으며, 최소 공배수는 30이다.

두 자연수 A와 B가 주어졌을 때, A와 B의 최소공배수를 구하는 프로그램을 작성하시오.

<br>

## 입력

첫째 줄에 테스트 케이스의 개수 T(1 ≤ T ≤ 1,000)가 주어진다. 둘째 줄부터 T개의 줄에 걸쳐서 A와 B가 주어진다. (1 ≤ A, B ≤ 45,000)

<br>

## 출력

첫째 줄부터 T개의 줄에 A와 B의 최소공배수를 입력받은 순서대로 한 줄에 하나씩 출력한다.

<br>

## 예제 입력 1

```
3
1 45000
6 10
13 17
```

## 예제 출력 1

```
45000
30
221
```

<br>

## 📝 풀어보기

📌 테스트 케이스의 개수 T를 입력받는다.

유클리드 호제법 `x = y, y = x%y` 를 이용하여 y가 0이 될때까지 반복하면서 x,y값을 구하고 최소공배수는 A*B/x 이므로 최소공배수 값을 정수형으로 리턴해준다.  

``` python
import sys
input = sys.stdin.readline
T = int(input())

def min_(x,y):
    while y:
        x, y = y, x%y
        # print("x, y : "+ str(x), str(y))
        min = A*B/x
    print(int(min))

for _ in range(T):
    A, B = map(int, input().split())
    min_(A, B)
```

