---
layout: post
title: 파이썬 회사에 있는 사람(백준 BOJ 7785)
date: 2022-07-28 18:40:00 +0900
image: 백준.png
tags: 알고리즘
categories: python 
---

딕셔너리 사용하기

<br>

## 문제

상근이는 세계적인 소프트웨어 회사 기글에서 일한다. 이 회사의 가장 큰 특징은 자유로운 출퇴근 시간이다. 따라서, 직원들은 반드시 9시부터 6시까지 회사에 있지 않아도 된다.

각 직원은 자기가 원할 때 출근할 수 있고, 아무때나 퇴근할 수 있다.

상근이는 모든 사람의 출입카드 시스템의 로그를 가지고 있다. 이 로그는 어떤 사람이 회사에 들어왔는지, 나갔는지가 기록되어져 있다. 로그가 주어졌을 때, 현재 회사에 있는 모든 사람을 구하는 프로그램을 작성하시오.

<br>

## 입력

첫째 줄에 로그에 기록된 출입 기록의 수 n이 주어진다. (2 ≤ n ≤ 106) 다음 n개의 줄에는 출입 기록이 순서대로 주어지며, 각 사람의 이름이 주어지고 "enter"나 "leave"가 주어진다. "enter"인 경우는 출근, "leave"인 경우는 퇴근이다.

회사에는 동명이인이 없으며, 대소문자가 다른 경우에는 다른 이름이다. 사람들의 이름은 알파벳 대소문자로 구성된 5글자 이하의 문자열이다.

<br>

## 출력

현재 회사에 있는 사람의 이름을 사전 순의 역순으로 한 줄에 한 명씩 출력한다.

<br>

## 예제 입력 1

```
4
Baha enter
Askar enter
Baha leave
Artem enter
```

## 예제 출력 1

```
Askar
Artem
```

<br>

## 📝 풀어보기

📌 입력받을 횟수 `N` 딕셔너리 `Name` 변수를 생성하고 N의 반복만큼 name과 Log를 입력받는다. Log에 입력된 내용이 `enter` 면 그대로 딕셔너리에 삽입하고, 그외엔 삭제한다. 조건이 사전순의 역순이기 때문에 key값을 역순으로 정렬하고 출력한다. 

``` python
N = int(input())
Name = {}
for _ in range(N):
    name, Log = map(str, input().split())

    if Log == 'enter':
        Name[name] = 'enter' # 딕셔너리에 name을 삽입
    else:
        del Name[name]

result = sorted(Name.keys(), reverse= True)

for i in result:
    print(i)
```

