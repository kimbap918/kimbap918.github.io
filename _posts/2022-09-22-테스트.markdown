---
layout: post
title: 파이썬 테스트
date: 2022-09-22 23:22:00 +0900
image: 백준.png
tags: 알고리즘
categories: 문제풀이
---

<br>

## 문제

n개의 정수로 이루어진 임의의 수열이 주어진다. 우리는 이 중 연속된 몇 개의 수를 선택해서 구할 수 있는 합 중 가장 큰 합을 구하려고 한다. 단, 수는 한 개 이상 선택해야 한다.

예를 들어서 10, -4, 3, 1, 5, 6, -35, 12, 21, -1 이라는 수열이 주어졌다고 하자. 여기서 정답은 12+21인 33이 정답이 된다.

<br>

## 입력

첫째 줄에 정수 n(1 ≤ n ≤ 100,000)이 주어지고 둘째 줄에는 n개의 정수로 이루어진 수열이 주어진다. 수는 -1,000보다 크거나 같고, 1,000보다 작거나 같은 정수이다.

<br>

## 출력

첫째 줄에 답을 출력한다.

<br>

## 예제 입력 1

```
10
10 -4 3 1 5 6 -35 12 21 -1
```

## 예제 출력 1

```
33
```

## 예제 입력 2

```
10
2 1 -4 3 4 -4 6 5 -5 1
```

## 예제 출력 2

```
14
```

## 예제 입력 3

```
5
-1 -2 -3 -4 -5
```

## 예제 출력 3

```
-1
```

<br>

## 📝 풀어보기

📌 정수의 개수 n을 입력받고 n개의 정수로 이루어진 수열을 리스트로 입력받는다. 비교를 위해 arr의 맨 처음의 값을 max_sum에 담는다.

리스트의 앞 비교를 위해 arr의 길이 -1 범위까지 반복하면서 max_sum + arr[i+1] 값과 arr[i+1]중 어느값이 더 큰지 확인하고 큰 값을 max_sum에 추가한다.

모인 max_sum 값 중 가장 큰 값을 출력한다.

``` python
n = int(input())
arr = list(map(int, input().split()))
max_sum = [arr[0]] # 비교를 위한 arr값 입력

for i in range(len(arr) -1): # 0부터 arr-1까지
    max_sum.append(max(max_sum[i] + arr[i+1], arr[i+1])) # sum[i]+arr[i+1]과 arr[i+1]중 큰 값을 비교 후 추가
print(max(max_sum)) # 추가된 값들 중 최대값 출력
```

