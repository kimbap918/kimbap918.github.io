---
layout: post
title: 파이썬 N과 M(4)(BOJ 15652)
date: 2022-09-10 08:50:00 +0900
image: 백준.png
tags: 알고리즘
categories: 문제풀이
---

<br>

## 문제

자연수 N과 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오.

- 1부터 N까지 자연수 중에서 M개를 고른 수열
- 같은 수를 여러 번 골라도 된다.
- 고른 수열은 비내림차순이어야 한다.
  - 길이가 K인 수열 A가 A1 ≤ A2 ≤ ... ≤ AK-1 ≤ AK를 만족하면, 비내림차순이라고 한다.

<br>

## 입력

첫째 줄에 자연수 N과 M이 주어진다. (1 ≤ M ≤ N ≤ 8)

<br>

## 출력

한 줄에 하나씩 문제의 조건을 만족하는 수열을 출력한다. 중복되는 수열을 여러 번 출력하면 안되며, 각 수열은 공백으로 구분해서 출력해야 한다.

수열은 사전 순으로 증가하는 순서로 출력해야 한다.

<br>

## 예제 입력 1

```
3 1
```

## 예제 출력 1

```
1
2
3
```

## 예제 입력 2

```
4 2
```

## 예제 출력 2

```
1 1
1 2
1 3
1 4
2 2
2 3
2 4
3 3
3 4
4 4
```

## 예제 입력 3

```
3 3
```

## 예제 출력 3 

```
1 1 1
1 1 2
1 1 3
1 2 2
1 2 3
1 3 3
2 2 2
2 2 3
2 3 3
3 3 3
```

<br>

## 📝 풀어보기

📌 

- 1부터 N까지 자연수 중에서 M개를 고른 수열
- 같은 수를 여러 번 골라도 된다.
- 고른 수열은 비내림차순이어야 한다.
  - 길이가 K인 수열 A가 A1 ≤ A2 ≤ ... ≤ AK-1 ≤ AK를 만족하면, 비내림차순이라고 한다.

N, M을 입력받고, 수열을 담을 리스트 arr을 생성한다.

``` python
N, M = map(int, input().split())
arr = []
```

<br>

📌 dfs 함수를 생성해서 `i부터 N+1의 범위`까지 반복하면서 arr에 i값이 없을 경우 arr에 i를 추가하고, i값을 dfs 함수에 다시 실행시킨다. 그리고 arr의 마지막 값은 꺼낸다.

arr의 길이가 M과 같을 경우에는 arr 내의 값을 공백과 함께 출력하고 반환한다. 

``` python
def dfs(i):
    if len(arr) == M:
        print(' '.join(map(str, arr)))
        return
    
    for i in range(i, N+1):
        arr.append(i)
        dfs(i)
        arr.pop()
dfs(1)
```

<br>

#### 전체 코드

``` python
N, M = map(int, input().split())
arr = []

def dfs(i):
    if len(arr) == M:
        print(' '.join(map(str, arr)))
        return
    
    for i in range(i, N+1):
        arr.append(i)
        dfs(i)
        arr.pop()
dfs(1)
```
