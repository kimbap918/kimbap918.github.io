---
layout: post
title: 파이썬 회의실 배정(백준 BOJ 1931)
date: 2022-09-14 23:55:00 +0900
image: 백준.png
tags: 알고리즘
categories: 문제풀이
---

<br>

## 문제

한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다. 각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자. 단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다. 회의의 시작시간과 끝나는 시간이 같을 수도 있다. 이 경우에는 시작하자마자 끝나는 것으로 생각하면 된다.

<br>

## 입력

첫째 줄에 회의의 수 N(1 ≤ N ≤ 100,000)이 주어진다. 둘째 줄부터 N+1 줄까지 각 회의의 정보가 주어지는데 이것은 공백을 사이에 두고 회의의 시작시간과 끝나는 시간이 주어진다. 시작 시간과 끝나는 시간은 231-1보다 작거나 같은 자연수 또는 0이다.

<br>

## 출력

첫째 줄에 최대 사용할 수 있는 회의의 최대 개수를 출력한다.

<br>

## 예제 입력 1

```
11
1 4
3 5
0 6
5 7
3 8
5 9
6 10
8 11
8 12
2 13
12 14
```

## 예제 출력 1

```
4
```

## 힌트

(1,4), (5,7), (8,11), (12,14) 를 이용할 수 있다.

<br>

## 📝 풀어보기

📌 회의의 수 n을 입력받고 n만큼 반복하면서 회의 시작시간과 종료시간을 튜플의 형태로 입력받고 튜플을 람다식으로 1. 끝나는 시간의 오름차순`x[1]`, 2. 끝나는 시간이 같을 경우에 시작하는 시간의 오름차순 `x[0]` 으로 정렬한다.

cnt, 끝나는 시간을 갱신하기 위한 end를 생성하고 time을 순회하면서 s가 end보다 크거나 같으면 cnt를 증가시키고 end를 e로 갱신해서 반복한다.

``` python
n = int(input()) # 회의의 수 
time = sorted([tuple(map(int, input().split())) for _ in range(n)], key=lambda x:(x[1], x[0]))
# 회의정보가 주어짐, 시작시간/끝시간 
# 가장 많은 회의의 수를 알기 위해서는 
# 1. 빨리 끝나는 회의 순으로 정렬이 되어야 함(끝나는 시간의 오름차순)
# 2. 끝나는 시간이 같을 경우에는 빨리 시작하는 순으로 정렬이 되어야함(시작하는 시간의 오름차순)
# -> 시작시간/끝시간 입력을 튜플에 담아 람다식으로 정렬한다. 
cnt= 0
end = 0
for s, e in time: # 정렬된 time 튜플에서 s, e 순회
    if s >= end: # s가 end 보다 크거나 같으면
        cnt += 1 # cnt 1 증가 
        end = e # end = e
print(cnt)
```



