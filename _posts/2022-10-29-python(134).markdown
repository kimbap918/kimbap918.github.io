---
layout: post
title: 파이썬 최댓값(백준 BOJ 2566)
date: 2022-10-29 20:08:00 +0900
image: 백준.png
tags: 알고리즘
categories: 문제풀이
---

<br> 

## 문제

<그림 1>과 같이 9×9 격자판에 쓰여진 81개의 자연수 또는 0이 주어질 때, 이들 중 최댓값을 찾고 그 최댓값이 몇 행 몇 열에 위치한 수인지 구하는 프로그램을 작성하시오.

예를 들어, 다음과 같이 81개의 수가 주어지면

|      | 1열  | 2열  | 3열  | 4열  | 5열  | 6열  | 7열  | 8열  | 9열  |
| ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |
| 1행  | 3    | 23   | 85   | 34   | 17   | 74   | 25   | 52   | 65   |
| 2행  | 10   | 7    | 39   | 42   | 88   | 52   | 14   | 72   | 63   |
| 3행  | 87   | 42   | 18   | 78   | 53   | 45   | 18   | 84   | 53   |
| 4행  | 34   | 28   | 64   | 85   | 12   | 16   | 75   | 36   | 55   |
| 5행  | 21   | 77   | 45   | 35   | 28   | 75   | 90   | 76   | 1    |
| 6행  | 25   | 87   | 65   | 15   | 28   | 11   | 37   | 28   | 74   |
| 7행  | 65   | 27   | 75   | 41   | 7    | 89   | 78   | 64   | 39   |
| 8행  | 47   | 47   | 70   | 45   | 23   | 65   | 3    | 41   | 44   |
| 9행  | 87   | 13   | 82   | 38   | 31   | 12   | 29   | 29   | 80   |

이들 중 최댓값은 90이고, 이 값은 5행 7열에 위치한다.

<br>

## 입력

첫째 줄부터 아홉 번째 줄까지 한 줄에 아홉 개씩 수가 주어진다. 주어지는 수는 100보다 작은 자연수 또는 0이다.

<br>

## 출력

첫째 줄에 최댓값을 출력하고, 둘째 줄에 최댓값이 위치한 행 번호와 열 번호를 빈칸을 사이에 두고 차례로 출력한다. 최댓값이 두 개 이상인 경우 그 중 한 곳의 위치를 출력한다.

<br>

## 예제 입력 1 

```
3 23 85 34 17 74 25 52 65
10 7 39 42 88 52 14 72 63
87 42 18 78 53 45 18 84 53
34 28 64 85 12 16 75 36 55
21 77 45 35 28 75 90 76 1
25 87 65 15 28 11 37 28 74
65 27 75 41 7 89 78 64 39
47 47 70 45 23 65 3 41 44
87 13 82 38 31 12 29 29 80
```

## 예제 출력 1 

```
90
5 7
```

<br>

## 📝 풀어보기

📌 최댓값을 비교할 변수, 위치를 출력할 x, y를 생성한다.

9 *9 격자판이므로 9번 반복하면서 숫자를 입력받는다.

입력받는 리스트의 최댓값이 max_num보다 클 경우, max_num을 리스트의 최댓값으로 갱신한다. 그 때에 행과 열의 값도 저장한다.

마지막으로 갱신된 최댓값을 출력하고 행과 열이 1, 1 부터 시작하므로 x, y값에 +1 을 추가해서 출력한다.

``` python
max_num = 0
x = 0
y = 0

for i in range(9):
    num_list = list(map(int, input().split()))
    max_num_list = max(num_list)
    if max_num_list > max_num:
        max_num = max_num_list
        x = i
        y = num_list.index(max_num_list)

print(max_num)
print(x+1, y+1)
```

