---
layout: post
title: 파이썬 카드 2(백준 BOJ 2164)
date: 2022-10-16 18:55:00 +0900
image: 백준.png
tags: 알고리즘
categories: 문제풀이
---

<br>

## 문제

N장의 카드가 있다. 각각의 카드는 차례로 1부터 N까지의 번호가 붙어 있으며, 1번 카드가 제일 위에, N번 카드가 제일 아래인 상태로 순서대로 카드가 놓여 있다.

이제 다음과 같은 동작을 카드가 한 장 남을 때까지 반복하게 된다. 우선, 제일 위에 있는 카드를 바닥에 버린다. 그 다음, 제일 위에 있는 카드를 제일 아래에 있는 카드 밑으로 옮긴다.

예를 들어 N=4인 경우를 생각해 보자. 카드는 제일 위에서부터 1234 의 순서로 놓여있다. 1을 버리면 234가 남는다. 여기서 2를 제일 아래로 옮기면 342가 된다. 3을 버리면 42가 되고, 4를 밑으로 옮기면 24가 된다. 마지막으로 2를 버리고 나면, 남는 카드는 4가 된다.

N이 주어졌을 때, 제일 마지막에 남게 되는 카드를 구하는 프로그램을 작성하시오.

<br>

## 입력

첫째 줄에 정수 N(1 ≤ N ≤ 500,000)이 주어진다.

<br>

## 출력

첫째 줄에 남게 되는 카드의 번호를 출력한다.



## 예제 입력 1

```
6
```

## 예제 출력 1

```
4
```



## 📝 풀어보기

deque를 사용하기 위해 from collections import deque를 import 한다.

queue 변수에 deque()를 저장하고 N을 입력받는다.

N만큼 반복하면서 queue에 1부터 N+1 값을 넣는다. 

deque는 양 끝 엘리먼트의 append와 pop이 압도적으로 빠르다. 이 문제를 풀려고 pop을 여러번 사용하면서 pop과 append를 하면 시간초과가 발생한다. 그래서 popleft를 사용해서 왼쪽의 값을 빼내고 deque를 회전시켜 다시 왼쪽의 값을 빼내는것을 1개가 남을때까지 하면 시간초과가 발생하지 않는다.

```
from collections import deque
import sys

queue = deque()
N = int(input())

for i in range(1, N+1):
    queue.append(i)

while len(queue) > 1:
    queue.popleft()
    # print(queue)
    queue.rotate(-1)
    # print(queue)
print(queue[0])
```
