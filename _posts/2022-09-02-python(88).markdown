---
layout: post
title: 파이썬 터렛(백준 BOJ 1002)
date: 2022-09-02 12:50:00 +0900
image: 백준.png
tags: 알고리즘
categories: 문제풀이
---

<br>

## 문제

조규현과 백승환은 터렛에 근무하는 직원이다. 하지만 워낙 존재감이 없어서 인구수는 차지하지 않는다. 다음은 조규현과 백승환의 사진이다.

![img](https://www.acmicpc.net/upload/201003/dfcmhrjj_142c3w76qg8_b.jpg)

이석원은 조규현과 백승환에게 상대편 마린(류재명)의 위치를 계산하라는 명령을 내렸다. 조규현과 백승환은 각각 자신의 터렛 위치에서 현재 적까지의 거리를 계산했다.

조규현의 좌표 (x1, y1)와 백승환의 좌표 (x2, y2)가 주어지고, 조규현이 계산한 류재명과의 거리 r1과 백승환이 계산한 류재명과의 거리 r2가 주어졌을 때, 류재명이 있을 수 있는 좌표의 수를 출력하는 프로그램을 작성하시오.

<br>

## 입력

첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 다음과 같이 이루어져 있다.

한 줄에 x1, y1, r1, x2, y2, r2가 주어진다. x1, y1, x2, y2는 -10,000보다 크거나 같고, 10,000보다 작거나 같은 정수이고, r1, r2는 10,000보다 작거나 같은 자연수이다.

<br>

## 출력

각 테스트 케이스마다 류재명이 있을 수 있는 위치의 수를 출력한다. 만약 류재명이 있을 수 있는 위치의 개수가 무한대일 경우에는 -1을 출력한다.

<br>

## 예제 입력 1

```
3
0 0 13 40 0 37
0 0 3 0 7 4
1 1 1 1 1 5
```

## 예제 출력 1

```
2
1
0
```

<br>

## 📝 풀어보기

📌 좌표 평면 위의 두 점 사이 거리 공식을 활용한다.

좌표평면 상 두 점 사이 거리를 구하는 공식은 `(x1-x2)**2 + (y1+y2)**2 = r**2`이다.

`x1, y1, r1, x2, y2, r2`를 입력받는다.

두 점 사이의 거리 공식을 활용해서 `((x1-x2)**2 + (y1-y2)**2)`의 제곱근인 dist를 구한다.

dist 값이 0이고, r1, r2이 같다면 좌표평면 상 r1, r2는 축이 같은 동심원이다. 동심원이면 만나는 좌표가 무한대이므로 -1을 출력한다.

abs(r1-r2)가 dist와 같거나, r1+r2가 dist와 같다면 원이 내접원으로 한 점에서 만나므로 1을 출력한다.

abs(r1-r2) < dist < (r1 + r2) 라면 점이 두 점에서 만나므로 2를 출력한다.

마지막으로 그 외의 경우에는 만나는 점이 없으므로 0을 출력한다. 

``` python
import math

T = int(input())

for _ in range(T):
    x1, y1, r1, x2, y2, r2 = map(int, input().split())
    # 좌표평면 위 두 점 사이의 거리 공식 활용
    # (x-a)^2 + (y-b)^2 = r^2
    dist = math.sqrt((x1-x2)**2 + (y1-y2)**2) 
    if dist == 0 and r1 == r2: # 두 원이 동심원(중심이 같은 원)일 때
        print(-1)
    elif abs(r1-r2) == dist or r1 + r2 == dist: # 원이 내접원으로 한 점에서 만날때
        print(1)
    elif abs(r1-r2) < dist < (r1 + r2): # 점이 두 점에서 만날때 
        print(2)
    else:
        print(0)
```

